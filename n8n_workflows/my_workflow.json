[{"createdAt":"2025-06-01T21:37:12.452Z","updatedAt":"2025-06-01T21:42:49.000Z","id":"1MOCuNt1tEtkF8pm","name":"My workflow","active":false,"isArchived":false,"nodes":[{"parameters":{"httpMethod":"POST","path":"mem0-memory-event","responseMode":"responseNode","options":{}},"name":"Webhook","type":"n8n-nodes-base.webhook","position":[-900,160],"typeVersion":1,"description":"Endpoint for capturing memory events","id":"0448c84d-945f-4b5e-b03e-0fcf536aa532","webhookId":"04d17e32-90c1-4486-8bf7-4b4be8068f67"},{"parameters":{"jsCode":"    const data = $input.item.json;\n    const timestamp = new Date().toISOString();\n    const event_id = (Date.now().toString(36) + Math.random().toString(36).substr(2, 5)).toUpperCase();\n\n    // Fields specific to mem0_memory_events\n    const event_type = data.event_type || 'unknown_event';\n    const user_id = data.user_id || null; // Handle missing optional fields\n    const agent_id = data.agent_id || null;\n    const memory_id = data.memory_id || null;\n    const payload = data.payload ? JSON.stringify(data.payload) : null; // Stringify if it exists\n    const content = data.content || ''; // Keeping original content field too if needed\n    const metadata = data.metadata ? JSON.stringify(data.metadata) : JSON.stringify({});\n\n\n    return {\n      timestamp,\n      event_id,\n      event_type,\n      user_id,\n      agent_id,\n      memory_id,\n      payload,\n      content, // If you still want to log the 'content' field separately\n      metadata // This is already stringified\n    };"},"name":"Format Log Entry","type":"n8n-nodes-base.code","position":[-680,160],"typeVersion":2,"description":"Formats the memory event for database storage","id":"dd5d6d76-680b-4845-8449-8110540b5941","alwaysOutputData":true},{"parameters":{"schema":"public","table":"mem0_memory_events","columns":{"mappingMode":"defineBelow","value":{"timestamp":"={{ $json.timestamp }}","event_type":"={{ $json.event_type }}","user_id":"={{ $json.user_id }}","memory_id":"={{ $json.memory_id }}","agent_id":"={{ $json.agent_id }}","payload":"={{ $json.payload }}"},"matchingColumns":["id"],"schema":[{"id":"id","displayName":"id","required":false,"defaultMatch":true,"display":true,"type":"number","canBeUsedToMatch":true,"removed":true},{"id":"event_type","displayName":"event_type","required":true,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"timestamp","displayName":"timestamp","required":false,"defaultMatch":false,"display":true,"type":"dateTime","canBeUsedToMatch":true},{"id":"user_id","displayName":"user_id","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"agent_id","displayName":"agent_id","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"memory_id","displayName":"memory_id","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"payload","displayName":"payload","required":false,"defaultMatch":false,"display":true,"type":"object","canBeUsedToMatch":true,"removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"name":"Log to Postgres","type":"n8n-nodes-base.postgres","position":[-460,160],"typeVersion":2.6,"description":"Insert event into Postgres database","id":"fb5eb019-fffd-44f4-be8d-080cd9ed4b06","credentials":{"postgres":{"id":"RRJmkcRaHXZBMhKB","name":"Postgres account"}},"continueOnFail":true},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"1d985ab1-dddc-4b0d-bb77-9d2a0a167046","leftValue":"=","rightValue":"","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"options":{}},"name":"Is Content Creation/Update?","type":"n8n-nodes-base.if","position":[-240,160],"typeVersion":2,"description":"Only trigger file backup for content creation/updates","id":"8fa8e7da-790e-4fe8-893f-34c42051ff77"},{"parameters":{"options":{}},"name":"Respond to Webhook","type":"n8n-nodes-base.respondToWebhook","position":[180,160],"typeVersion":1,"description":"Return success response","id":"db33d08e-08b1-4627-b90d-fd150776d2a6"}],"connections":{"Webhook":{"main":[[{"node":"Format Log Entry","type":"main","index":0}]]},"Format Log Entry":{"main":[[{"node":"Log to Postgres","type":"main","index":0}]]},"Log to Postgres":{"main":[[{"node":"Is Content Creation/Update?","type":"main","index":0}]]},"Is Content Creation/Update?":{"main":[[],[{"node":"Respond to Webhook","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"Webhook":[{"json":{"event_type":"memory_created","user_id":"user-123-abc","agent_id":"agent-xyz-789","memory_id":"mem-qwerty-456","content":"This is the textual content of the memory that was created.","payload":{"original_query":"What were the Q2 sales figures?","source_document_id":"doc-abc-123","tags":["sales","finance","Q2"]},"metadata":{"source_application":"freq-chat","custom_field_1":"custom_value_A","user_ip_address":"192.168.1.100"}}}]},"versionId":"240d1677-989a-473a-a6ab-3cc9a7da096e","triggerCount":0,"tags":[]}]