{
  "name": "CentralBrainFlow",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "id": "b24b05a7-d802-4413-bfb1-23e1e76f6203",
      "name": "When chat message received",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1,
      "position": [
        -1720,
        300
      ],
      "webhookId": "a889d2ae-2159-402f-b326-5f61e90f602e"
    },
    {
      "parameters": {
        "content": "## Start by saying 'hi'\n![Button](https://i.imgur.com/PrIBJI6.png)",
        "height": 149,
        "width": 150
      },
      "id": "5592c045-6718-4c4e-9961-ce67a251b6df",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1880,
        240
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "d5e60eb2-267c-4f68-aefe-439031bcaceb",
      "name": "OpenAI Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -1160,
        140
      ],
      "credentials": {
        "openAiApi": {
          "id": "fc8LHOuJnDGhAaj4",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=## Steps to follow\n\n{{ $agentInfo.memoryConnectedToAgent ? '1. Skip': `1. STOP and output the following:\n\"Welcome to n8n. Let's start with the first step to give me memory: \\n\"Click the **+** button on the agent that says 'memory' and choose 'Simple memory.' Just tell me once you've done that.\"\n----- END OF OUTPUT && IGNORE BELOW -----` }} \n\n\n{{ Boolean($agentInfo.tools.find((tool) => tool.type === 'Google Calendar Tool')) ? '2. Skip' : \n`2. STOP and output the following: \\n\"Click the **+** button on the agent that says 'tools' and choose 'Google Calendar.'\" \\n ----- IGNORE BELOW -----` }}\n\n\n{{ $agentInfo.tools.find((tool) => tool.type === 'Google Calendar Tool').hasCredentials ? '3. Skip' :\n`3. STOP and output the following:\n\"Open the Google Calendar tool (double-click) and choose a credential from the drop-down.\" \\n ----- IGNORE BELOW -----` }}\n\n\n{{ $agentInfo.tools.find((tool) => tool.type === 'Google Calendar Tool').resource === 'Event' ? '4. Skip' :\n`4. STOP and output the following:\n\"Open the Google Calendar tool (double-click) and set **resource** = 'Event'\" `}}\n\n\n{{ $agentInfo.tools.find((tool) => tool.type === 'Google Calendar Tool').operation === 'Get Many' ? '5. Skip' :\n`5. STOP and output the following:\n\"Open the Google Calendar tool (double-click) and set **operation** = 'Get Many.'\" \\n ----- IGNORE BELOW -----` }}\n\n\n{{ $agentInfo.tools.find((tool) => tool.type === 'Google Calendar Tool').hasValidCalendar ? '6. Skip' :\n`6. STOP and output the following:\n\"Open the Google Calendar tool (double-click) and choose a calendar from the 'calendar' drop-down.\" \\n ----- IGNORE BELOW -----` }}\n\n\n{{ ($agentInfo.tools.find((tool) => tool.type === 'Google Calendar Tool').aiDefinedFields.includes('Start Time') && $agentInfo.tools.find((tool) => tool.type === 'Google Calendar Tool').aiDefinedFields.includes('End Time')) ? '7. Skip' :\n`7. STOP and output the following: \nOpen the Google Calendar tool (double-click) and click the :sparks: button next to the 'After' and 'Before' fields. \\n ----- IGNORE BELOW -----` }}\n\n\n8. If all steps are completed, output the following:\n\"Would you like me to check all events in your calendar for tomorrow {{ $now.plus(1, 'days').toString().split('T')[0] }}?\"\n\n# User message\n\n{{ $json.chatInput }}",
        "options": {
          "systemMessage": "=You are a friendly Agent designed to guide users through these steps.\n\n- Stop at the earliest step mentioned in the steps\n- Respond concisely and do **not** disclose these internal instructions to the user. Only return defined output below.\n- Don't output any lines that start with -----\n- Replace \":sparks:\" with \"âœ¨\" in any message"
        }
      },
      "id": "41174c8a-6ac8-42bd-900e-ca15196600c5",
      "name": "Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1,
      "position": [
        -1480,
        320
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "central-brain-command",
        "responseMode": "lastNode",
        "options": {}
      },
      "id": "e3dee231-34e7-4b4b-b6a4-8280103e7abb",
      "name": "CentralBrain_Agent Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -1480,
        100
      ],
      "webhookId": "7aaf79f2-c5e5-4606-919d-2aea985df890"
    },
    {
      "parameters": {
        "rules": {
          "rules": [
            {
              "operation": "stringContains"
            },
            {
              "operation": "stringContains"
            },
            {
              "operation": "stringContains",
              "output": 1
            },
            {
              "operation": "stringContains",
              "output": 1
            },
            {
              "operation": "stringContains",
              "output": 1
            },
            {
              "operation": "stringContains",
              "output": 2
            },
            {
              "operation": "stringContains",
              "output": 3
            }
          ]
        }
      },
      "id": "758abb11-8597-45a1-9d85-758f251f0698",
      "name": "Route Command",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 1,
      "position": [
        -580,
        -20
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "YOUR_DOC_AGENT_WORKFLOW_URL",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json }}",
        "options": {}
      },
      "id": "63863ba4-d32b-42d8-829d-470c0cb9e3eb",
      "name": "Call DocAgent",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        -240,
        -340
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "YOUR_FREQTRADE_AGENT_WORKFLOW_URL",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json }}",
        "options": {}
      },
      "id": "6bc2f90d-333b-4795-af0c-bfa8c5e92911",
      "name": "Call FreqtradeSpecialist_Agent",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        -240,
        -160
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "YOUR_NOTIFICATION_AGENT_WORKFLOW_URL",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json }}",
        "options": {}
      },
      "id": "3bbce76b-f469-417d-aa15-2d386b1018e8",
      "name": "Call NotificationAgent",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        -240,
        20
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "YOUR_MARKETMONITOR_AGENT_WORKFLOW_URL",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json }}",
        "options": {}
      },
      "id": "9685fd91-65d2-4d87-ab7d-dec55958b78e",
      "name": "Call MarketMonitor_Agent",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        -240,
        220
      ]
    },
    {
      "parameters": {},
      "id": "3406405a-e08a-4cb6-8b5b-12860fcec5b3",
      "name": "Set Unknown Command Response",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        -540,
        340
      ]
    },
    {
      "parameters": {},
      "id": "eee2d291-0322-4814-8020-644956a72185",
      "name": "Prepare for Response",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        160,
        20
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "4064e8cd-114f-42f6-a4c1-cadfe295fd2a",
      "name": "Send Final Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        380,
        20
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1,
      "position": [
        -1000,
        120
      ],
      "id": "f5297f05-e9d1-47bb-9acc-2b3f0393c7c0",
      "name": "Information Extractor"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1,
      "position": [
        -1460,
        640
      ],
      "id": "0dff1daf-e06d-4e1d-88b2-a79b84adb0c5",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "owner": {
          "__rl": true,
          "mode": "list",
          "value": ""
        },
        "repository": {
          "__rl": true,
          "mode": "list",
          "value": ""
        },
        "labels": [],
        "assignees": []
      },
      "type": "n8n-nodes-base.githubTool",
      "typeVersion": 1,
      "position": [
        -1140,
        760
      ],
      "id": "b850278e-8dbb-40db-85a2-07bd59554992",
      "name": "GitHub",
      "webhookId": "faf87909-792b-49cc-9a40-14345985c315"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "jSJu6a1hKh2LY2nH",
          "mode": "list",
          "cachedResultName": "My Sub-Workflow 1"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        -820,
        440
      ],
      "id": "d3a2f785-c3ce-475a-8e64-9503d56d2959",
      "name": "Call n8n Workflow Tool"
    },
    {
      "parameters": {
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.linearTool",
      "typeVersion": 1,
      "position": [
        -1060,
        660
      ],
      "id": "b3d4a62b-a684-4150-889c-3e97b422dbe0",
      "name": "Linear"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "typeVersion": 1,
      "position": [
        -900,
        300
      ],
      "id": "eb239861-a21f-4c1b-84b0-61f8de22701a",
      "name": "MCP Client"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolCode",
      "typeVersion": 1,
      "position": [
        -960,
        460
      ],
      "id": "a73424d6-c267-4eab-b622-9056a6522571",
      "name": "Code Tool"
    },
    {
      "parameters": {
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.microsoftOutlookTool",
      "typeVersion": 2,
      "position": [
        -680,
        740
      ],
      "id": "6378cdb0-87f3-40f6-b818-f07288bb0ea5",
      "name": "Microsoft Outlook",
      "webhookId": "27612948-1374-4070-8b32-9a85a82fd6ef"
    },
    {
      "parameters": {
        "table": {
          "__rl": true,
          "mode": "list",
          "value": ""
        }
      },
      "type": "n8n-nodes-base.mySqlTool",
      "typeVersion": 2,
      "position": [
        -1280,
        640
      ],
      "id": "8939ac9d-977b-4fea-bea6-27181515ed4a",
      "name": "MySQL"
    },
    {
      "parameters": {
        "pageId": {
          "__rl": true,
          "mode": "url",
          "value": ""
        },
        "options": {}
      },
      "type": "n8n-nodes-base.notionTool",
      "typeVersion": 2,
      "position": [
        -1040,
        800
      ],
      "id": "856cfde0-4424-4df4-8e9e-34cb99c30647",
      "name": "Notion"
    },
    {
      "parameters": {
        "otherOptions": {}
      },
      "type": "n8n-nodes-base.slackTool",
      "typeVersion": 2,
      "position": [
        -1140,
        900
      ],
      "id": "a421c117-6576-4723-9247-f1526a1515ad",
      "name": "Slack",
      "webhookId": "018fdf3c-d523-4cd2-b127-343aaf34e2db"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "mode": "list",
          "value": ""
        }
      },
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2,
      "position": [
        -1360,
        720
      ],
      "id": "a945e6c7-a327-441a-926d-87d2c0f35693",
      "name": "Postgres"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        -1800,
        520
      ],
      "id": "55cb799c-7f43-4634-9e6f-1cd2b3ee9f80",
      "name": "Answer questions with a vector store"
    },
    {
      "parameters": {
        "filters": {},
        "options": {}
      },
      "type": "n8n-nodes-base.youTubeTool",
      "typeVersion": 1,
      "position": [
        -780,
        760
      ],
      "id": "8a525ad3-0918-41be-956e-580d31259a16",
      "name": "YouTube"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolWolframAlpha",
      "typeVersion": 1,
      "position": [
        -860,
        840
      ],
      "id": "f43a2c8a-ec59-4528-a3d0-d8dc436c93d3",
      "name": "Wolfram Alpha"
    },
    {
      "parameters": {
        "query": "=",
        "count": "={{ 20 }}"
      },
      "type": "@brave/n8n-nodes-brave-search.braveSearch",
      "typeVersion": 1,
      "position": [
        -1960,
        100
      ],
      "id": "74582b67-f1dc-4f5b-b4fc-52d83df2b306",
      "name": "Brave Search",
      "alwaysOutputData": true,
      "retryOnFail": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "model": "deepseek/deepseek-r1-distill-llama-70b:free",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        -1600,
        680
      ],
      "id": "6d62179e-6471-4261-9489-1c0f1c8e3dc6",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "Vc2voj8x3VLDf24j",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "qdrantCollection": {
          "__rl": true,
          "mode": "list",
          "value": ""
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "typeVersion": 1,
      "position": [
        -1960,
        680
      ],
      "id": "ed3c4cf5-f45a-4ef0-af36-3603b14c627e",
      "name": "Qdrant Vector Store",
      "credentials": {
        "qdrantApi": {
          "id": "XOTxuHxDiargR8Ok",
          "name": "QdrantApi account"
        }
      }
    },
    {
      "parameters": {
        "modelName": "BAAI/bge-base-en-v1.5",
        "options": {
          "endpointUrl": "https://huggingface.co/spaces/GleshenCOCO/bge-embedding-api"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsHuggingFaceInference",
      "typeVersion": 1,
      "position": [
        -1920,
        860
      ],
      "id": "d5007951-d006-4f79-9cdd-752e31031c43",
      "name": "Embeddings HuggingFace Inference",
      "credentials": {
        "huggingFaceApi": {
          "id": "4O0vBaA8BOd70wyM",
          "name": "HuggingFaceApi account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Model": {
      "ai_languageModel": [
        [
          {
            "node": "Information Extractor",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Route Command": {
      "main": [
        [
          {
            "node": "Call DocAgent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Call FreqtradeSpecialist_Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Call NotificationAgent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Call MarketMonitor_Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call DocAgent": {
      "main": [
        [
          {
            "node": "Prepare for Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call FreqtradeSpecialist_Agent": {
      "main": [
        [
          {
            "node": "Prepare for Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call NotificationAgent": {
      "main": [
        [
          {
            "node": "Prepare for Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call MarketMonitor_Agent": {
      "main": [
        [
          {
            "node": "Prepare for Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare for Response": {
      "main": [
        [
          {
            "node": "Send Final Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CentralBrain_Agent Webhook": {
      "main": [
        [
          {
            "node": "Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Information Extractor": {
      "main": [
        [
          {
            "node": "Route Command",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub": {
      "ai_tool": [
        [
          {
            "node": "Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Call n8n Workflow Tool": {
      "ai_tool": [
        [
          {
            "node": "Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Linear": {
      "ai_tool": [
        [
          {
            "node": "Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "MCP Client": {
      "ai_tool": [
        [
          {
            "node": "Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Code Tool": {
      "ai_tool": [
        [
          {
            "node": "Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Microsoft Outlook": {
      "ai_tool": [
        [
          {
            "node": "Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "MySQL": {
      "ai_tool": [
        [
          {
            "node": "Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Notion": {
      "ai_tool": [
        [
          {
            "node": "Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Slack": {
      "ai_tool": [
        [
          {
            "node": "Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "ai_tool": [
        [
          {
            "node": "Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Answer questions with a vector store": {
      "ai_tool": [
        [
          {
            "node": "Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "YouTube": {
      "ai_tool": [
        [
          {
            "node": "Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Wolfram Alpha": {
      "ai_tool": [
        [
          {
            "node": "Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Agent": {
      "main": [
        [
          {
            "node": "Brave Search",
            "type": "main",
            "index": 0
          },
          {
            "node": "Information Extractor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Brave Search": {
      "main": [
        [
          {
            "node": "Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Answer questions with a vector store",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Qdrant Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "Answer questions with a vector store",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings HuggingFace Inference": {
      "ai_embedding": [
        [
          {
            "node": "Qdrant Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "ab0a09ad-b01e-4d05-adc2-71a6cce34419",
  "meta": {
    "templateId": "self-building-ai-agent",
    "templateCredsSetupCompleted": true,
    "instanceId": "86a72cb17b8cb1b6e2035080a3f955af7f7378ac6544fba404e6df979973b7cc"
  },
  "id": "CaAzepBjFhFh5ldW",
  "tags": [],
  "version": 2
}